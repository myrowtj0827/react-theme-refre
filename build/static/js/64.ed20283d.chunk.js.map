{"version":3,"sources":["assets/img/elements/01.png","views/cards/advancedCard.js","assets/img/elements/04.png","assets/img/elements/07.png","assets/img/elements/06.png","components/cards/monthlySalesStatisticsBarChartCard.js","components/cards/shoppingCartCard.js","assets/img/elements sync /^/.//0.*/.png$","assets/img/elements/02.png","assets/img/elements/03.png","assets/img/elements/05.png","assets/img/elements/08.png","assets/img/elements/09.png","components/cards/visitSalesStatistics.js","components/cards/weeklyStatisticsLineChartCard.js","components/cards/projectStatsDonutChartCard.js","components/cards/productsSalesChartCard.js","components/cards/hobbiesStatisticsBarChartCard.js","components/cards/userListCard.js"],"names":["module","exports","__webpack_require__","p","BasicCards","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","className","sm","_components_cards_productsSalesChartCard__WEBPACK_IMPORTED_MODULE_8__","productsSalesData","AdvancedCardData","ProductsSalesData","cardTitle","salesText","visitText","lg","xl","_components_cards_visitSalesStatistics__WEBPACK_IMPORTED_MODULE_9__","visitSalesData","VisitSalesData","_components_cards_weeklyStatisticsLineChartCard__WEBPACK_IMPORTED_MODULE_10__","weeklySalesStatisticsBarChartData","WeeklySalesStatisticsBarChartData","cardBgColor","statisticsAmount","statisticsRangeAmount","md","_components_cards_discoverPeopleListCard__WEBPACK_IMPORTED_MODULE_11__","discoverPeopleList","DiscoverPeopleList","_components_cards_salesAnalysisChartCard__WEBPACK_IMPORTED_MODULE_12__","salesAnalysisData","SalesAnalysisData","clickText","_components_cards_salesPerVisitChartCard__WEBPACK_IMPORTED_MODULE_13__","salesPerVisitData","SalesPerVisitData","_components_cards_dailyDietListCard__WEBPACK_IMPORTED_MODULE_14__","dailyDietList","DailyDietList","cardSubTitle","_components_cards_monthlySalesStatisticsBarChartCard__WEBPACK_IMPORTED_MODULE_15__","monthlySalesStatisticsBarChartData","MonthlySalesStatisticsBarChartData","_components_cards_shoppingCartCard__WEBPACK_IMPORTED_MODULE_16__","shoppingCart","ShoppingCart","_components_cards_hobbiesStatisticsBarChartCard__WEBPACK_IMPORTED_MODULE_17__","hobbiesStatisticsBarChartData","HobbiesStatisticsBarChartData","_components_cards_userListCard__WEBPACK_IMPORTED_MODULE_18__","userListData","UserListData","_components_cards_projectStatsDonutChartCard__WEBPACK_IMPORTED_MODULE_19__","projectStatsDonutChartData","ProjectStatsDonutChartData","_components_cards_userStatisticsChartCard__WEBPACK_IMPORTED_MODULE_20__","userStatisticData","UserStatisticData","fullName","designation","_components_cards_carouselSliderCard__WEBPACK_IMPORTED_MODULE_21__","description","_components_cards_earningStatisticsChartCard__WEBPACK_IMPORTED_MODULE_22__","earningStatisticData","EarningStatisticData","earningAmount","earningText","Component","MonthlySalesStatisticsBarChartCard","classnames","this","props","react_chartist__WEBPACK_IMPORTED_MODULE_8___default","data","type","options","stackBars","fullWidth","axisX","showGrid","axisY","showLabel","offset","chartPadding","listener","created","svg","elem","id","x1","y1","x2","y2","stop-color","parent","draw","element","attr","style","y","PureComponent","ShoppingCartCard","shoppingList","responsive","list","map","object","i","button","status","color","key","src","require","alt","product","quantity","amount","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","delete","./01.png","./02.png","./03.png","./04.png","./05.png","./06.png","./07.png","./08.png","./09.png","webpackContext","req","webpackContextResolve","e","Error","code","keys","Object","resolve","VisitSalesStatistics","react_chartist__WEBPACK_IMPORTED_MODULE_7___default","showArea","lineSmooth","Chartist","Interpolation","none","low","scaleMinSpace","defs","stop-opacity","circle","Svg","cx","x","cy","r","class","replace","dX","width","WeeklySalesStatisticsBarChartCard","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","react_chartist__WEBPACK_IMPORTED_MODULE_9___default","high","ChartistLib","ProjectStatsDonutChartCard","donut","startAngle","labelInterpolationFnc","value","series","reduce","prev","index","dx","root","dy","height","remove","name","progressClassName","role","aria-valuenow","aria-valuemin","aria-valuemax","ProductSalesChartCard","onlyInteger","HobbiesStatisticsBarChartCard","UserListCard","userList","left","href","img","body","position","check"],"mappings":"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","file":"static/js/64.ed20283d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/01.8f48063a.png\";","import React, { Component, Fragment } from \"react\";\nimport { Row, Col } from \"reactstrap\";\n\nimport { AdvancedCardData } from \"./advancedCardData\";\n\nimport ProductsSalesChartCard from \"../../components/cards/productsSalesChartCard\";\n\nimport VisitSalesStatisticsCard from \"../../components/cards/visitSalesStatistics\";\nimport WeeklyStatisticsLineChartCard from \"../../components/cards/weeklyStatisticsLineChartCard\";\n\nimport DiscoverPeopleListCard from \"../../components/cards/discoverPeopleListCard\";\nimport SalesAnalysisChartCarda from \"../../components/cards/salesAnalysisChartCard\";\n\nimport SalesPerVisitChartCard from \"../../components/cards/salesPerVisitChartCard\";\nimport DailyDietListCard from \"../../components/cards/dailyDietListCard\";\n\nimport MonthlySalesStatisticsBarChartCard from \"../../components/cards/monthlySalesStatisticsBarChartCard\";\nimport ShoppingCartCard from \"../../components/cards/shoppingCartCard\";\n\nimport HobbiesStatisticsBarChartCard from \"../../components/cards/hobbiesStatisticsBarChartCard\";\nimport UserListCard from \"../../components/cards/userListCard\";\nimport ProjectStatsDonutChartCard from \"../../components/cards/projectStatsDonutChartCard\";\n\nimport UserStatisticsChartCard from \"../../components/cards/userStatisticsChartCard\";\nimport CarouselSliderCard from \"../../components/cards/carouselSliderCard\";\nimport EarningStatisticsChartCard from \"../../components/cards/earningStatisticsChartCard\";\n\nclass BasicCards extends Component {\n   render() {\n      return (\n         <Fragment>\n            <Row className=\"row-eq-height\">\n               <Col sm=\"12\">\n                  <ProductsSalesChartCard\n                     productsSalesData={AdvancedCardData.ProductsSalesData}\n                     cardTitle=\"Products Sales\"\n                     salesText=\"Sales\"\n                     visitText=\"Visits\"\n                  />\n               </Col>\n            </Row>\n\n            <Row className=\"row-eq-height\">\n               <Col sm=\"12\" lg=\"6\" xl=\"8\">\n                  <VisitSalesStatisticsCard\n                     visitSalesData={AdvancedCardData.VisitSalesData}\n                     cardTitle=\"Visit & Sales Statistics\"\n                     salesText=\"Sales\"\n                     visitText=\"Visits\"\n                  />\n               </Col>\n               <Col sm=\"12\" lg=\"6\" xl=\"4\">\n                  <WeeklyStatisticsLineChartCard\n                     weeklySalesStatisticsBarChartData={AdvancedCardData.WeeklySalesStatisticsBarChartData}\n                     cardBgColor=\"gradient-blackberry\"\n                     cardTitle=\"Statistics\"\n                     statisticsAmount=\"$ 78.89\"\n                     statisticsRangeAmount=\"Week2 +15.44\"\n                  />\n               </Col>\n            </Row>\n\n            <Row className=\"row-eq-height\">\n               <Col sm=\"12\" md=\"6\" xl=\"4\">\n                  <DiscoverPeopleListCard\n                     discoverPeopleList={AdvancedCardData.DiscoverPeopleList}\n                     cardTitle=\"Peoples\"\n                  />\n               </Col>\n               <Col sm=\"12\" md=\"6\" xl=\"8\">\n                  <SalesAnalysisChartCarda\n                     salesAnalysisData={AdvancedCardData.SalesAnalysisData}\n                     cardTitle=\"Sales Analysis\"\n                     salesText=\"Sales\"\n                     visitText=\"Visits\"\n                     clickText=\"Clicks\"\n                  />\n               </Col>\n            </Row>\n\n            <Row className=\"row-eq-height\">\n               <Col sm=\"12\" md=\"8\">\n                  <SalesPerVisitChartCard\n                     salesPerVisitData={AdvancedCardData.SalesPerVisitData}\n                     cardTitle=\"Sales Per Visit\"\n                     salesText=\"Sales\"\n                     visitText=\"Visits\"\n                  />\n               </Col>\n               <Col sm=\"12\" md=\"4\">\n                  <DailyDietListCard\n                     dailyDietList={AdvancedCardData.DailyDietList}\n                     cardTitle=\"Daily Diet\"\n                     cardSubTitle=\"Some quick example text to build on the card.\"\n                  />\n               </Col>\n            </Row>\n\n            <Row className=\"row-eq-height\">\n               <Col sm=\"12\" md=\"4\">\n                  <MonthlySalesStatisticsBarChartCard\n                     monthlySalesStatisticsBarChartData={AdvancedCardData.MonthlySalesStatisticsBarChartData}\n                     cardTitle=\"Statistics\"\n                     cardSubTitle=\"Last 6 Months Sales\"\n                  />\n               </Col>\n               <Col sm=\"12\" md=\"8\">\n                  <ShoppingCartCard shoppingCart={AdvancedCardData.ShoppingCart} cardTitle=\"Shopping Cart\" />\n               </Col>\n            </Row>\n\n            <Row className=\"row-eq-height\">\n               <Col sm=\"12\" lg=\"6\" xl=\"4\">\n                  <HobbiesStatisticsBarChartCard\n                     hobbiesStatisticsBarChartData={AdvancedCardData.HobbiesStatisticsBarChartData}\n                     cardTitle=\"Statistics\"\n                     cardSubTitle=\"Hobbies\"\n                  />\n               </Col>\n               <Col sm=\"12\" lg=\"6\" xl=\"4\">\n                  <UserListCard userListData={AdvancedCardData.UserListData} cardTitle=\"Users List\" />\n               </Col>\n               <Col sm=\"12\" lg=\"6\" xl=\"4\">\n                  <ProjectStatsDonutChartCard\n                     projectStatsDonutChartData={AdvancedCardData.ProjectStatsDonutChartData}\n                     cardTitle=\"Projects Stats\"\n                     cardSubTitle=\"Project Tasks\"\n                  />\n               </Col>\n\n               <Col sm=\"12\" lg=\"6\" xl=\"4\">\n                  <UserStatisticsChartCard\n                     userStatisticData={AdvancedCardData.UserStatisticData}\n                     fullName=\"Kevin Sullivan\"\n                     designation=\"UX Designer\"\n                  />\n               </Col>\n               <Col sm=\"12\" lg=\"6\" xl=\"4\">\n                  <CarouselSliderCard\n                     cardTitle=\"Card Titile\"\n                     description=\"Sweet halvah dragée jelly-o halvah carrot cake oat cake. Donut jujubes jelly chocolate cake.\"\n                  />\n               </Col>\n               <Col sm=\"12\" lg=\"6\" xl=\"4\">\n                  <EarningStatisticsChartCard\n                     earningStatisticData={AdvancedCardData.EarningStatisticData}\n                     cardTitle=\"Earning\"\n                     cardSubTitle=\"Mon 18 - Sun 21\"\n                     earningAmount=\"$4295.36\"\n                     earningText=\"Total Earnings\"\n                  />\n               </Col>\n            </Row>\n         </Fragment>\n      );\n   }\n}\nexport default BasicCards;\n","module.exports = __webpack_public_path__ + \"static/media/04.0b8650ef.png\";","module.exports = __webpack_public_path__ + \"static/media/07.64b65c89.png\";","module.exports = __webpack_public_path__ + \"static/media/06.964758d8.png\";","import React, { PureComponent } from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n//Chsrtis JS\nimport ChartistGraph from \"react-chartist\";\n//Chsrtis CSS\nimport \"chartist/dist/chartist.min.css\";\n//Component specific chart CSS\nimport \"../../assets/scss/components/cards/monthlySalesStatisticsBarChartCard.scss\";\n\nclass MonthlySalesStatisticsBarChartCard extends PureComponent {\n   render() {\n      return (\n         <Card className={classnames(this.props.cardBgColor)}>\n            <CardHeader>\n               <CardTitle className=\"mb-0\">{this.props.cardTitle}</CardTitle>\n            </CardHeader>\n            <CardBody className=\"pt-2 pb-0\">\n               <p className=\"font-medium-2 text-muted text-center pb-2\">\n                  {this.props.cardSubTitle}\n               </p>\n            </CardBody>\n            <ChartistGraph\n               className=\"height-300 Stackbarchart mb-2\"\n               data={this.props.monthlySalesStatisticsBarChartData}\n               type=\"Bar\"\n               options={{\n                  stackBars: true,\n                  fullWidth: true,\n                  axisX: {\n                     showGrid: false\n                  },\n                  axisY: {\n                     showGrid: false,\n                     showLabel: false,\n                     offset: 0\n                  },\n                  chartPadding: 30\n               }}\n               listener={{\n                  created: data => {\n                     let defs = data.svg.elem(\"defs\");\n                     defs\n                        .elem(\"linearGradient\", {\n                           id: \"linear\",\n                           x1: 0,\n                           y1: 1,\n                           x2: 0,\n                           y2: 0\n                        })\n                        .elem(\"stop\", {\n                           offset: 0,\n                           \"stop-color\": \"rgba(0, 201, 255,1)\"\n                        })\n                        .parent()\n                        .elem(\"stop\", {\n                           offset: 1,\n                           \"stop-color\": \"rgba(17,228,183, 1)\"\n                        });\n                  },\n                  draw: data => {\n                     if (data.type === \"bar\") {\n                        data.element.attr({\n                           style: \"stroke-width: 5px\",\n                           x1: data.x1 + 0.001\n                        });\n                     } else if (data.type === \"label\") {\n                        data.element.attr({\n                           y: 270\n                        });\n                     }\n                  }\n               }}\n            />\n         </Card>\n      );\n   }\n}\n\nMonthlySalesStatisticsBarChartCard.propTypes = {\n   cardTitle: PropTypes.string,\n   cardSubTitle: PropTypes.string,\n   stackbarchartData: PropTypes.object\n};\n\nexport default MonthlySalesStatisticsBarChartCard;\n","import React, { PureComponent } from \"react\";\nimport { Card, CardHeader, CardTitle, Table, Button } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nclass ShoppingCartCard extends PureComponent {\n   render() {\n      const shoppingList = this.props.shoppingCart;\n      return (\n         <Card>\n            <CardHeader>\n               <CardTitle className=\"mb-0\">{this.props.cardTitle}</CardTitle>\n            </CardHeader>\n            <Table responsive className=\"text-center\">\n               <thead>\n                  <tr>\n                     <th>#</th>\n                     <th>Product</th>\n                     <th>Quantity</th>\n                     <th>Status</th>\n                     <th>Amount</th>\n                     <th>Delete</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {shoppingList.list.map((object, i) => {\n                     let button;\n                     if (object.status === \"active\") {\n                        button = (\n                            <Button color=\"success\" className=\"btn-round\">Active</Button>\n                        );\n                     } else if (object.status === \"pending\") {\n                        button = (\n                            <Button color=\"warning\" className=\"btn-round\">Pending</Button>\n                        );\n                     } else {\n                        button = (\n                            <Button color=\"danger\" className=\"btn-round\">Cancelled</Button>                            \n                        );\n                     }\n\n                     return (\n                        <tr key={i}>\n                           <td>\n                              <img\n                                 src={require(\"../../assets/img/elements/0\" +\n                                    (i + 1) +\n                                    \".png\")}\n                                 className=\"media-object round-media height-50\"\n                                 alt=\"Card cap 02\"\n                              />\n                           </td>\n                           <td>{object.product}</td>\n                           <td>{object.quantity}</td>\n                           <td>{button}</td>\n                           <td>{object.amount}</td>\n                           <td className=\"danger\">\n                                <Link to=\"/\">\n                                    {object.delete}\n                                </Link>\n                           </td>\n                        </tr>\n                     );\n                  })}\n               </tbody>\n            </Table>\n         </Card>\n      );\n   }\n}\n\nShoppingCartCard.propTypes = {\n   cardTitle: PropTypes.string,\n   shoppingCart: PropTypes.object\n};\n\nexport default ShoppingCartCard;\n","var map = {\n\t\"./01.png\": 133,\n\t\"./02.png\": 210,\n\t\"./03.png\": 211,\n\t\"./04.png\": 144,\n\t\"./05.png\": 212,\n\t\"./06.png\": 161,\n\t\"./07.png\": 145,\n\t\"./08.png\": 213,\n\t\"./09.png\": 214\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 209;","module.exports = __webpack_public_path__ + \"static/media/02.d5d26572.png\";","module.exports = __webpack_public_path__ + \"static/media/03.feb83b6b.png\";","module.exports = __webpack_public_path__ + \"static/media/05.ecb5d7e8.png\";","module.exports = __webpack_public_path__ + \"static/media/08.3a932979.png\";","module.exports = __webpack_public_path__ + \"static/media/09.f5068704.png\";","import React, { PureComponent } from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n//Chsrtis JS\nimport ChartistGraph from \"react-chartist\";\nimport Chartist from \"chartist\";\n//Chsrtis CSS\nimport \"chartist/dist/chartist.min.css\";\n//Component specific chart CSS\nimport \"../../assets/scss/components/cards/visitSalesStatistics.scss\";\n\nclass VisitSalesStatistics extends PureComponent {\n   render() {\n      return (\n         <Card>\n            <CardHeader>\n               <CardTitle className=\"mb-0\">{this.props.cardTitle}</CardTitle>\n            </CardHeader>\n            <CardBody className=\"pt-2 pb-0\">\n               <div className=\"chart-info mb-2\">\n                  <span className=\"text-uppercase mr-3\">\n                     <i className=\"fa fa-circle primary font-small-2 mr-1\" /> {this.props.salesText}\n                  </span>\n                  <span className=\"text-uppercase\">\n                     <i className=\"fa fa-circle deep-purple font-small-2 mr-1\" /> {this.props.visitText}\n                  </span>\n               </div>\n            </CardBody>\n            <ChartistGraph\n               className=\"height-400 lineAreaDashboard\"\n               data={this.props.visitSalesData}\n               type=\"Line\"\n               options={{\n                  showArea: true,\n                  fullWidth: true,\n                  lineSmooth: Chartist.Interpolation.none(),\n                  axisX: {\n                     showGrid: false\n                  },\n                  axisY: {\n                     low: 0,\n                     scaleMinSpace: 50\n                  }\n               }}\n               listener={{\n                  created: data => {\n                     let defs = data.svg.elem(\"defs\");\n                     defs\n                        .elem(\"linearGradient\", {\n                           id: \"gradient2\",\n                           x1: 0,\n                           y1: 1,\n                           x2: 0,\n                           y2: 0\n                        })\n                        .elem(\"stop\", {\n                           offset: 0,\n                           \"stop-opacity\": \"0.2\",\n                           \"stop-color\": \"rgba(255, 255, 255, 1)\"\n                        })\n                        .parent()\n                        .elem(\"stop\", {\n                           offset: 1,\n                           \"stop-opacity\": \"0.2\",\n                           \"stop-color\": \"rgba(0, 201, 255, 1)\"\n                        });\n\n                     defs\n                        .elem(\"linearGradient\", {\n                           id: \"gradient3\",\n                           x1: 0,\n                           y1: 1,\n                           x2: 0,\n                           y2: 0\n                        })\n                        .elem(\"stop\", {\n                           offset: 0.3,\n                           \"stop-opacity\": \"0.2\",\n                           \"stop-color\": \"rgba(255, 255, 255, 1)\"\n                        })\n                        .parent()\n                        .elem(\"stop\", {\n                           offset: 1,\n                           \"stop-opacity\": \"0.2\",\n                           \"stop-color\": \"rgba(132, 60, 247, 1)\"\n                        });\n                  },\n                  draw: data => {\n                     let circleRadius = 4;\n                     if (data.type === \"point\") {\n                        let circle = new Chartist.Svg(\"circle\", {\n                           cx: data.x,\n                           cy: data.y,\n                           r: circleRadius,\n                           'class': \"ct-point-circle\"\n                        });\n                        data.element.replace(circle);\n                     } else if (data.type === \"label\") {\n                        // adjust label position for rotation\n                        const dX = data.width / 2 + (30 - data.width);\n                        data.element.attr({ x: data.element.attr(\"x\") - dX });\n                     }\n                  }\n               }}\n            />\n         </Card>\n      );\n   }\n}\n\nVisitSalesStatistics.propTypes = {\n   cardTitle: PropTypes.string,\n   salesText: PropTypes.string,\n   visitText: PropTypes.string,\n   visitSalesData: PropTypes.object\n};\n\nexport default VisitSalesStatistics;\n","import React, { PureComponent } from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\n//Chsrtis JS\nimport ChartistGraph from \"react-chartist\";\nimport ChartistLib from \"chartist\";\n//Chsrtis CSS\nimport \"chartist/dist/chartist.min.css\";\n//Component specific chart CSS\nimport \"../../assets/scss/components/cards/weeklySalesStatisticsBarChartCard.scss\";\n\nclass WeeklySalesStatisticsBarChartCard extends PureComponent {\n   render() {\n      return (\n         <Card className={classnames(this.props.cardBgColor)}>            \n            <CardHeader>\n               <CardTitle className=\"mb-0 white\">\n                  {this.props.cardTitle}\n               </CardTitle>\n            </CardHeader>\n            <CardBody className=\"pt-2 pb-0\">\n               <div className=\"p-2 text-center\">\n                <Link to=\"/\" className=\"white font-medium-1\">\n                    Month\n                </Link>\n                <Link to=\"/\" className=\"btn btn-round bg-white mx-3 my-0 px-3\">\n                    Week\n                </Link>\n                <Link to=\"/\" className=\"white font-medium-1\">\n                    Day\n                </Link>\n               </div>\n               <div className=\"my-3 text-center white\">\n                <Link to=\"/\" className=\"font-large-2 d-block mb-1 white\">\n                    {this.props.statisticsAmount}{\" \"}\n                    <span className=\"ft-arrow-up font-large-2\" />\n                </Link>\n                  <span className=\"font-medium-1\">\n                     {this.props.statisticsRangeAmount}\n                  </span>\n               </div>\n            </CardBody>\n            <ChartistGraph\n               className=\"height-250 lineChart lineChartShadow\"\n               data={this.props.weeklySalesStatisticsBarChartData}\n               type=\"Line\"\n               options={{\n                  axisX: {\n                     showGrid: false\n                  },\n                  axisY: {\n                     showGrid: false,\n                     showLabel: false,\n                     low: 0,\n                     high: 100,\n                     offset: 0\n                  },\n                  fullWidth: true,\n                  offset: 0,\n                  chartPadding: 25,\n               }}\n               listener={{\n                  created: data => {\n                     let circleRadius = 4;\n                     if (data.type === \"point\") {\n                        let circle = new ChartistLib.Svg(\"circle\", {\n                           cx: data.x,\n                           cy: data.y,\n                           r: circleRadius,\n                           'class': \"ct-point-circle\"\n                        });\n\n                        data.element.replace(circle);\n                     } else if (data.type === \"label\") {\n                        // adjust label position for rotation\n                        const dX = data.width / 2 + (30 - data.width);\n                        data.element.attr({ x: data.element.attr(\"x\") - dX });\n                     }\n                  }\n               }}\n            />\n         </Card>\n      );\n   }\n}\n\nWeeklySalesStatisticsBarChartCard.propTypes = {\n   cardTitle: PropTypes.string,\n   cardSubTitle: PropTypes.string,\n   statisticsRangeAmount: PropTypes.string,\n   statisticsAmount: PropTypes.string,\n   weeklySalesStatisticsBarChartData: PropTypes.object\n};\n\nexport default WeeklySalesStatisticsBarChartCard;\n","import React, { PureComponent } from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n//Chsrtis JS\nimport ChartistGraph from \"react-chartist\";\n//Chsrtis CSS\nimport \"chartist/dist/chartist.min.css\";\n//Component specific chart CSS\nimport \"../../assets/scss/components/cards/projectStatsDonutChartCard.scss\";\n\nclass ProjectStatsDonutChartCard extends PureComponent {\n   render() {\n      const projectStatsDonutChartData = this.props.projectStatsDonutChartData;\n      return (\n         <Card className={classnames(this.props.cardBgColor)}>\n            <CardHeader>\n               <CardTitle className=\"mb-0\">{this.props.cardTitle}</CardTitle>\n            </CardHeader>\n            <CardBody className=\"pt-2 pb-0\">\n               <p className=\"font-medium-2 text-muted text-center pb-2\">\n                  {this.props.cardSubTitle}\n               </p>\n            </CardBody>\n            <ChartistGraph\n               className=\"height-250 donut\"\n               data={this.props.projectStatsDonutChartData}\n               type=\"Pie\"\n               options={{\n                  donut: true,\n                  startAngle: 0,\n                  labelInterpolationFnc: value => {\n                     let total = projectStatsDonutChartData.series.reduce(\n                        (prev, series) => {\n                           return prev + series.value;\n                        },\n                        0\n                     );\n                     return total + \"%\";\n                  }\n               }}\n               listener={{\n                  draw: data => {\n                     if (data.type === \"label\") {\n                        if (data.index === 0) {\n                           data.element.attr({\n                              dx: data.element.root().width() / 2,\n                              dy: data.element.root().height() / 2\n                           });\n                        } else {\n                           data.element.remove();\n                        }\n                     }\n                  }\n               }}\n            />\n            <CardBody>\n               <div className=\"row\">\n                  {projectStatsDonutChartData.series.map((object, i) => {\n                     return (\n                        <div className={\"col-6\"} key={i}>\n                           {[\n                              <div key={i}>\n                                 <span className=\"mb-1 text-muted d-block\">\n                                    {object.value}% - {object.name}\n                                 </span>\n                                 <div\n                                    className=\"progress\"\n                                    style={{ height: 5 + \"px\" }}\n                                 >\n                                    <div\n                                       className={classnames(\n                                          \"progress-bar\",\n                                          object.progressClassName\n                                       )}\n                                       role=\"progressbar\"\n                                       style={{ width: object.value + \"%\" }}\n                                       aria-valuenow={object.value}\n                                       aria-valuemin=\"0\"\n                                       aria-valuemax=\"100\"\n                                    />\n                                 </div>\n                              </div>\n                           ]}\n                        </div>\n                     );\n                  })}\n               </div>\n            </CardBody>\n         </Card>\n      );\n   }\n}\n\nProjectStatsDonutChartCard.propTypes = {\n   cardTitle: PropTypes.string,\n   cardSubTitle: PropTypes.string,\n   stackbarchartData: PropTypes.object\n};\n\nexport default ProjectStatsDonutChartCard;\n","import React, { PureComponent } from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n//Chsrtis JS\nimport ChartistGraph from \"react-chartist\";\n//Chsrtis CSS\nimport \"chartist/dist/chartist.min.css\";\n//Component specific chart CSS\nimport \"../../assets/scss/components/cards/productSalesChartCard.scss\";\n\nclass ProductSalesChartCard extends PureComponent {\n   render() {\n      return (\n         <Card>\n            <CardHeader>\n               <CardTitle className=\"mb-0\">{this.props.cardTitle}</CardTitle>\n            </CardHeader>\n            <CardBody className=\"pt-2 pb-0\">\n               <div className=\"chart-info mb-2\">\n                  <span className=\"gradient-blackberry d-inline-block rounded-circle mr-1 p-1\">\n                     {\" \"}\n                  </span>\n                  {this.props.salesText}\n                  <span className=\"gradient-mint d-inline-block rounded-circle mr-1 ml-2 p-1\">\n                     {\" \"}\n                  </span>\n                  {this.props.visitText}\n               </div>\n            </CardBody>\n            <ChartistGraph\n               className=\"height-350 lineArea\"\n               data={this.props.productsSalesData}\n               type=\"Line\"\n               options={{\n                  low: 0,\n                  showArea: true,\n                  fullWidth: true,\n                  onlyInteger: true,\n                  axisY: {\n                     low: 0,\n                     scaleMinSpace: 50,\n                     offset:35,\n                  },\n                  axisX: {\n                     showGrid: false\n                  }\n               }}\n               listener={{\n                  created: data => {\n                     let defs = data.svg.elem(\"defs\");\n                     defs\n                        .elem(\"linearGradient\", {\n                           id: \"gradient\",\n                           x1: 0,\n                           y1: 1,\n                           x2: 1,\n                           y2: 0\n                        })\n                        .elem(\"stop\", {\n                           offset: 0,\n                           \"stop-color\": \"rgba(0, 201, 255, 1)\"\n                        })\n                        .parent()\n                        .elem(\"stop\", {\n                           offset: 1,\n                           \"stop-color\": \"rgba(146, 254, 157, 1)\"\n                        });\n\n                     defs\n                        .elem(\"linearGradient\", {\n                           id: \"gradient1\",\n                           x1: 0,\n                           y1: 1,\n                           x2: 1,\n                           y2: 0\n                        })\n                        .elem(\"stop\", {\n                           offset: 0,\n                           \"stop-color\": \"rgba(132, 60, 247, 1)\"\n                        })\n                        .parent()\n                        .elem(\"stop\", {\n                           offset: 1,\n                           \"stop-color\": \"rgba(56, 184, 242, 1)\"\n                        });\n                  }\n               }}\n            />\n         </Card>\n      );\n   }\n}\n\nProductSalesChartCard.propTypes = {\n   cardTitle: PropTypes.string,\n   salesText: PropTypes.string,\n   visitText: PropTypes.string,\n   productsSalesData: PropTypes.object\n};\n\nexport default ProductSalesChartCard;\n","import React, { PureComponent } from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n//Chsrtis JS\nimport ChartistGraph from \"react-chartist\";\n//Chsrtis CSS\nimport \"chartist/dist/chartist.min.css\";\n//Component specific chart CSS\nimport \"../../assets/scss/components/cards/hobbiesStatisticsBarChartCard.scss\";\n\nclass HobbiesStatisticsBarChartCard extends PureComponent {\n   render() {\n      return (\n         <Card className={classnames(this.props.cardBgColor)}>\n            <CardHeader>\n               <CardTitle className=\"mb-0\">{this.props.cardTitle}</CardTitle>\n            </CardHeader>\n            <CardBody className=\"pt-2 pb-0\">\n               <p className=\"font-medium-2 text-muted text-center pb-2\">\n                  {this.props.cardSubTitle}\n               </p>\n            </CardBody>\n            <ChartistGraph\n               className=\"height-400 BarChartShadow BarChart\"\n               data={this.props.hobbiesStatisticsBarChartData}\n               type=\"Bar\"\n               options={{\n                  axisX: {\n                     showGrid: false\n                  },\n                  axisY: {\n                     showGrid: false,\n                     showLabel: false,\n                     offset: 0\n                  },\n                  low: 0\n               }}\n               listener={{\n                  created: data => {\n                     let defs = data.svg.elem(\"defs\");\n                     defs\n                        .elem(\"linearGradient\", {\n                           id: \"gradient4\",\n                           x1: 0,\n                           y1: 1,\n                           x2: 0,\n                           y2: 0\n                        })\n                        .elem(\"stop\", {\n                           offset: 0,\n                           \"stop-color\": \"rgba(238, 9, 121,1)\"\n                        })\n                        .parent()\n                        .elem(\"stop\", {\n                           offset: 1,\n                           \"stop-color\": \"rgba(255, 106, 0, 1)\"\n                        });\n                     defs\n                        .elem(\"linearGradient\", {\n                           id: \"gradient5\",\n                           x1: 0,\n                           y1: 1,\n                           x2: 0,\n                           y2: 0\n                        })\n                        .elem(\"stop\", {\n                           offset: 0,\n                           \"stop-color\": \"rgba(0, 75, 145,1)\"\n                        })\n                        .parent()\n                        .elem(\"stop\", {\n                           offset: 1,\n                           \"stop-color\": \"rgba(120, 204, 55, 1)\"\n                        });\n\n                     defs\n                        .elem(\"linearGradient\", {\n                           id: \"gradient6\",\n                           x1: 0,\n                           y1: 1,\n                           x2: 0,\n                           y2: 0\n                        })\n                        .elem(\"stop\", {\n                           offset: 0,\n                           \"stop-color\": \"rgba(132, 60, 247,1)\"\n                        })\n                        .parent()\n                        .elem(\"stop\", {\n                           offset: 1,\n                           \"stop-color\": \"rgba(56, 184, 242, 1)\"\n                        });\n                     defs\n                        .elem(\"linearGradient\", {\n                           id: \"gradient7\",\n                           x1: 0,\n                           y1: 1,\n                           x2: 0,\n                           y2: 0\n                        })\n                        .elem(\"stop\", {\n                           offset: 0,\n                           \"stop-color\": \"rgba(155, 60, 183,1)\"\n                        })\n                        .parent()\n                        .elem(\"stop\", {\n                           offset: 1,\n                           \"stop-color\": \"rgba(255, 57, 111, 1)\"\n                        });\n                  },\n                  draw: data => {\n                     if (data.type === \"bar\") {\n                        data.element.attr({\n                           y1: 340,\n                           x1: data.x1 + 0.001\n                        });\n                     }\n                  }\n               }}\n            />\n         </Card>\n      );\n   }\n}\n\nHobbiesStatisticsBarChartCard.propTypes = {\n   cardTitle: PropTypes.string,\n   cardSubTitle: PropTypes.string,\n   stackbarchartData: PropTypes.object\n};\n\nexport default HobbiesStatisticsBarChartCard;\n","import React, { PureComponent } from \"react\";\nimport {\n   Card,\n   CardHeader,\n   CardTitle,\n   CardBody,\n   Media,\n   FormGroup,\n   Label,\n   Input,\n   Button\n} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nclass UserListCard extends PureComponent {\n   render() {\n      const userList = this.props.userListData;\n      return (\n         <Card>\n            <CardHeader>\n               <CardTitle className=\"mb-0\">{this.props.cardTitle}</CardTitle>\n            </CardHeader>\n\n            <CardBody>\n               {userList.series.map((object, i) => {\n                  return (\n                     <div key={i}>\n                        {[\n                           <Media className=\"mb-1\" key={i}>\n                              <Media left href=\"#\">\n                                 <img\n                                    src={object.img}\n                                    className=\"media-object d-flex mr-3 bg-primary height-50 rounded-circle\"\n                                    alt=\"Card cap 02\"\n                                 />\n                              </Media>\n                              <Media body>\n                                 <h4 className=\"font-medium-1 mt-1 mb-0\">\n                                    {object.fullName}\n                                 </h4>\n                                 <p className=\"text-muted font-small-3\">\n                                    {object.position}\n                                 </p>\n                              </Media>\n                              <FormGroup check>\n                                 <Label check>\n                                    <Input type=\"checkbox\" />\n                                 </Label>\n                              </FormGroup>\n                           </Media>\n                        ]}\n                     </div>\n                  );\n               })}\n               <div className=\"action-buttons mt-2 text-center\">\n                  <Button className=\"gradient-blackberry py-2 px-4 white mr-2\">Add New</Button>\n               </div>\n            </CardBody>\n         </Card>\n      );\n   }\n}\n\nUserListCard.propTypes = {\n   cardTitle: PropTypes.string,\n   postition: PropTypes.string\n};\n\nexport default UserListCard;\n"],"sourceRoot":""}